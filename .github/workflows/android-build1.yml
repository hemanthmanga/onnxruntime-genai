name: "Android x64 Build"
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - rel-*
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  ORT_NIGHTLY_REST_API: "https://feeds.dev.azure.com/aiinfra/PublicPackages/_apis/packaging/Feeds/ORT-Nightly/packages?packageNameQuery=Microsoft.ML.OnnxRuntime&api-version=6.0-preview.1"
  ORT_PACKAGE_NAME: "Microsoft.ML.OnnxRuntime"
  ORT_NIGHTLY_SOURCE: "https://aiinfra.pkgs.visualstudio.com/PublicPackages/_packaging/ORT-Nightly/nuget/v3/index.json"
  ANDROID_ABI: "x86_64"

jobs:
  android_x64:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout OnnxRuntime GenAI repo
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: '8.6'

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      # Install Android SDK components manually
      - name: Install Android SDK components
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip
          mkdir -p $HOME/Android/Sdk
          cd $HOME/Android/Sdk
          
          # Download SDK command line tools
          wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip
          unzip commandlinetools-linux-8512546_latest.zip
          rm commandlinetools-linux-8512546_latest.zip

          # Set environment variables
          echo "export ANDROID_HOME=$HOME/Android/Sdk" >> ~/.bashrc
          echo "export ANDROID_SDK_ROOT=$HOME/Android/Sdk" >> ~/.bashrc
          echo "export PATH=\$PATH:\$ANDROID_HOME/cmdline-tools/latest/bin" >> ~/.bashrc
          source ~/.bashrc

          # Verify sdkmanager location
          echo "sdkmanager location: $(which sdkmanager)"
          
          # Install SDK components
          yes | sdkmanager --licenses
          sdkmanager --update
          sdkmanager "platform-tools" "emulator" "system-images;android-27;default;x86_64" "platforms;android-27"

      # Verify SDK Tools Installation
      - name: Verify SDK Tools Installation
        run: |
          echo $ANDROID_HOME
          sdkmanager --version
          sdkmanager --list

      # Create Android build
      - name: Create Android build
        run: |
          set -e -x
          rm -rf build
          ./build.sh --android --android_api=27 --android_ndk_path=${ANDROID_NDK_LATEST_HOME} --config=RelWithDebInfo --android_abi=${{ env.ANDROID_ABI }} --parallel --build_java --update

      # Run Android build
      - name: Run Android build
        run: |
          set -e -x
          ./build.sh --android --android_api=27 --android_ndk_path=${ANDROID_NDK_LATEST_HOME} --config=RelWithDebInfo --android_abi=${{ env.ANDROID_ABI }} --parallel --build_java --build

      # Enable KVM group perms so Android emulator can run
      - name: Enable KVM group perms
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      # Run the Android Emulator
      - name: Run Android Emulator
        run: |
          set -e -x
          $ANDROID_HOME/emulator/emulator -avd test_avd -no-window -no-audio -gpu off &
          adb wait-for-device
